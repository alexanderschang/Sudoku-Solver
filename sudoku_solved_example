m1 = [8 0 0 0 0 0 0 0 0; 0 0 3 6 0 0 0 0 0; 0 7 0 0 9 0 2 0 0; 0 5 0 0 0 7 0 0 0; 0 0 0 0 4 5 7 0 0; 0 0 0 1 0 0 0 3 0; 0 0 1 0 0 0 0 6 8; 0 0 8 5 0 0 0 1 0; 0 9 0 0 0 0 4 0 0]

m1 =

     8     0     0     0     0     0     0     0     0
     0     0     3     6     0     0     0     0     0
     0     7     0     0     9     0     2     0     0
     0     5     0     0     0     7     0     0     0
     0     0     0     0     4     5     7     0     0
     0     0     0     1     0     0     0     3     0
     0     0     1     0     0     0     0     6     8
     0     0     8     5     0     0     0     1     0
     0     9     0     0     0     0     4     0     0

m2 = [8 0 0 0 0 0 0 0 3; 0 0 3 6 0 0 0 0 0; 0 7 0 0 9 0 2 0 0; 0 5 0 0 0 7 0 0 0; 0 0 0 0 4 5 7 0 0; 9 0 0 1 0 0 6 3 0; 0 0 1 0 0 0 0 6 8; 0 0 8 5 0 0 0 1 0; 5 9 0 0 8 0 4 0 0]

m2 =

     8     0     0     0     0     0     0     0     3
     0     0     3     6     0     0     0     0     0
     0     7     0     0     9     0     2     0     0
     0     5     0     0     0     7     0     0     0
     0     0     0     0     4     5     7     0     0
     9     0     0     1     0     0     6     3     0
     0     0     1     0     0     0     0     6     8
     0     0     8     5     0     0     0     1     0
     5     9     0     0     8     0     4     0     0

OptimizeSudoku(m1)
LP:                Optimal objective value is -21.000000.                                           

Cut Generation:    Applied 2 strong CG cuts,                                                        
                   and 2 zero-half cuts.                                                            
                   Lower bound is -21.000000.                                                       

Branch and Bound:

   nodes     total   num int        integer       relative                                          
explored  time (s)  solution           fval        gap (%)                                         
      32      0.36         1  -2.000000e+01   4.761905e+00                                          
      34      0.38         2  -2.100000e+01   0.000000e+00                                          

Optimal solution found.

Intlinprog stopped because the
<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'milp_abs_gap','CSHelpWindow');">objective value is within a gap tolerance</a> of the optimal
value, options.AbsoluteGapTolerance = 0 (the default value).
The intcon variables are <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'milp_integer_within_tolerance','CSHelpWindow');">integer within tolerance</a>,
options.IntegerTolerance = 1e-05 (the default value).

     8     1     2     7     5     3     6     4     9
     9     4     3     6     8     2     1     7     5
     6     7     5     4     9     1     2     8     3
     1     5     4     2     3     7     8     9     6
     3     6     9     8     4     5     7     2     1
     2     8     7     1     6     9     5     3     4
     5     2     1     9     7     4     3     6     8
     4     3     8     5     2     6     9     1     7
     7     9     6     3     1     8     4     5     2


ans =

     8     1     2     7     5     3     6     4     9
     9     4     3     6     8     2     1     7     5
     6     7     5     4     9     1     2     8     3
     1     5     4     2     3     7     8     9     6
     3     6     9     8     4     5     7     2     1
     2     8     7     1     6     9     5     3     4
     5     2     1     9     7     4     3     6     8
     4     3     8     5     2     6     9     1     7
     7     9     6     3     1     8     4     5     2

OptimizeSudoku(m2)
LP:                Optimal objective value is -25.000000.                                           


Optimal solution found.

Intlinprog stopped at the root node because the
<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'milp_abs_gap','CSHelpWindow');">objective value is within a gap tolerance</a> of the optimal
value, options.AbsoluteGapTolerance = 0 (the default value).
The intcon variables are <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'milp_integer_within_tolerance','CSHelpWindow');">integer within tolerance</a>,
options.IntegerTolerance = 1e-05 (the default value).

     8     6     9     2     7     5     1     4     3
     2     4     3     6     1     8     9     5     7
     1     7     5     4     9     3     2     8     6
     6     5     4     9     3     7     8     2     1
     3     1     2     8     4     6     7     9     5
     9     8     7     1     5     2     6     3     4
     4     3     1     7     2     9     5     6     8
     7     2     8     5     6     4     3     1     9
     5     9     6     3     8     1     4     7     2


ans =

     8     6     9     2     7     5     1     4     3
     2     4     3     6     1     8     9     5     7
     1     7     5     4     9     3     2     8     6
     6     5     4     9     3     7     8     2     1
     3     1     2     8     4     6     7     9     5
     9     8     7     1     5     2     6     3     4
     4     3     1     7     2     9     5     6     8
     7     2     8     5     6     4     3     1     9
     5     9     6     3     8     1     4     7     2

diary off
